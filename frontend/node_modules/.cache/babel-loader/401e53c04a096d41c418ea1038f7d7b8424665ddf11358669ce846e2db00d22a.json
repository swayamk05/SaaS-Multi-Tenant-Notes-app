{"ast":null,"code":"var _jsxFileName = \"D:\\\\saas notes mern gpt\\\\frontend\\\\src\\\\pages\\\\Notes.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notes({\n  user\n}) {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const fetchNotes = async () => {\n    const token = localStorage.getItem(\"token\");\n    const res = await axios.get(\"http://localhost:5000/api/notes\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setNotes(res.data);\n  };\n  const addNote = async () => {\n    if (!title || !content) return;\n    const token = localStorage.getItem(\"token\");\n    const res = await axios.post(\"http://localhost:5000/api/notes\", {\n      title,\n      content\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setNotes([...notes, res.data]);\n    setTitle(\"\");\n    setContent(\"\");\n  };\n  const deleteNote = async id => {\n    const token = localStorage.getItem(\"token\");\n    await axios.delete(`http://localhost:5000/api/notes/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setNotes(notes.filter(n => n._id !== id));\n  };\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNote,\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-list\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteNote(note._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, note._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Notes, \"QLV01WfZiN9XoRmEW7p2GcfPmAc=\");\n_c = Notes;\nexport default Notes;\nvar _c;\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Notes","user","_s","notes","setNotes","title","setTitle","content","setContent","fetchNotes","token","localStorage","getItem","res","get","headers","Authorization","data","addNote","post","deleteNote","id","delete","filter","n","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","note","_c","$RefreshReg$"],"sources":["D:/saas notes mern gpt/frontend/src/pages/Notes.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Notes({ user }) {\r\n  const [notes, setNotes] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const fetchNotes = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const res = await axios.get(\"http://localhost:5000/api/notes\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    setNotes(res.data);\r\n  };\r\n\r\n  const addNote = async () => {\r\n    if (!title || !content) return;\r\n    const token = localStorage.getItem(\"token\");\r\n    const res = await axios.post(\r\n      \"http://localhost:5000/api/notes\",\r\n      { title, content },\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    setNotes([...notes, res.data]);\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n  };\r\n\r\n  const deleteNote = async (id) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    await axios.delete(`http://localhost:5000/api/notes/${id}`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    setNotes(notes.filter((n) => n._id !== id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"notes-container\">\r\n      <h2>Your Notes</h2>\r\n      <div className=\"note-form\">\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Title\" \r\n          value={title} \r\n          onChange={(e) => setTitle(e.target.value)} \r\n        />\r\n        <textarea \r\n          placeholder=\"Content\" \r\n          value={content} \r\n          onChange={(e) => setContent(e.target.value)} \r\n        />\r\n        <button onClick={addNote}>Add Note</button>\r\n      </div>\r\n      <div className=\"notes-list\">\r\n        {notes.map((note) => (\r\n          <div key={note._id} className=\"note\">\r\n            <h3>{note.title}</h3>\r\n            <p>{note.content}</p>\r\n            <button onClick={() => deleteNote(note._id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}