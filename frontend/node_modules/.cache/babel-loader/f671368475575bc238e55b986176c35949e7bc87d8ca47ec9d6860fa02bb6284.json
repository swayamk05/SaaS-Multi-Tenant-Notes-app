{"ast":null,"code":"var _jsxFileName = \"D:\\\\saas notes mern gpt\\\\frontend\\\\src\\\\pages\\\\Notes.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Notes.jsx\nimport React, { useEffect, useState } from \"react\";\nimport \"./Notes.css\"; // optional: custom styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Notes() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newContent, setNewContent] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [upgradeRequired, setUpgradeRequired] = useState(false);\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    if (!token) return;\n    try {\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\n      setUser({\n        id: payload.userId,\n        role: payload.role,\n        tenantSlug: payload.tenantSlug\n      });\n    } catch (err) {\n      console.error(\"Invalid token:\", err);\n      localStorage.removeItem(\"token\");\n    }\n    fetchNotes();\n  }, []);\n  const fetchNotes = async () => {\n    if (!token) return;\n    const res = await fetch(\"http://localhost:5000/api/notes\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await res.json();\n    if (data.notes) {\n      setNotes(data.notes);\n      if (data.upgradeRequired) setUpgradeRequired(true);\n    } else {\n      console.error(\"Error fetching notes:\", data);\n    }\n  };\n  const createNote = async () => {\n    if (!token || !newTitle) return;\n    const res = await fetch(\"http://localhost:5000/api/notes\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        title: newTitle,\n        content: newContent\n      })\n    });\n    const data = await res.json();\n    if (data.error) {\n      alert(data.error);\n      if (data.upgradeRequired) setUpgradeRequired(true);\n    } else {\n      setNotes([data, ...notes]);\n      setNewTitle(\"\");\n      setNewContent(\"\");\n    }\n  };\n  const deleteNote = async id => {\n    if (!token) return;\n    await fetch(`http://localhost:5000/api/notes/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setNotes(notes.filter(n => n._id !== id));\n  };\n  const upgradePlan = async () => {\n    if (!token || !(user !== null && user !== void 0 && user.tenantSlug)) return;\n    const res = await fetch(`http://localhost:5000/api/tenants/${user.tenantSlug}/upgrade`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await res.json();\n    if (data.success) {\n      alert(\"Upgraded to Pro plan! Note limit removed.\");\n      setUpgradeRequired(false);\n      fetchNotes();\n    } else {\n      alert(data.error || \"Upgrade failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), (user === null || user === void 0 ? void 0 : user.role) === \"ADMIN\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: upgradePlan,\n        children: \"Upgrade Tenant Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), upgradeRequired && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"upgrade-warning\",\n      children: \"Note limit reached! Upgrade to Pro to add more notes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-note\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newTitle,\n        onChange: e => setNewTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        value: newContent,\n        onChange: e => setNewContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createNote,\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-list\",\n      children: notes.map(note => {\n        var _note$author;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: note.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: note.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Author: \", ((_note$author = note.author) === null || _note$author === void 0 ? void 0 : _note$author.email) || \"Unknown\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteNote(note._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, note._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(Notes, \"9iSIdNnMccizmHAcRAicE6lhVLg=\");\n_c = Notes;\nvar _c;\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Notes","_s","notes","setNotes","newTitle","setNewTitle","newContent","setNewContent","user","setUser","upgradeRequired","setUpgradeRequired","token","localStorage","getItem","payload","JSON","parse","atob","split","id","userId","role","tenantSlug","err","console","error","removeItem","fetchNotes","res","fetch","headers","Authorization","data","json","createNote","method","body","stringify","title","content","alert","deleteNote","filter","n","_id","upgradePlan","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","map","note","_note$author","author","email","_c","$RefreshReg$"],"sources":["D:/saas notes mern gpt/frontend/src/pages/Notes.jsx"],"sourcesContent":["// src/pages/Notes.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Notes.css\"; // optional: custom styles\r\n\r\nexport default function Notes() {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newTitle, setNewTitle] = useState(\"\");\r\n  const [newContent, setNewContent] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n  const [upgradeRequired, setUpgradeRequired] = useState(false);\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    if (!token) return;\r\n\r\n    try {\r\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\r\n      setUser({ id: payload.userId, role: payload.role, tenantSlug: payload.tenantSlug });\r\n    } catch (err) {\r\n      console.error(\"Invalid token:\", err);\r\n      localStorage.removeItem(\"token\");\r\n    }\r\n\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  const fetchNotes = async () => {\r\n    if (!token) return;\r\n\r\n    const res = await fetch(\"http://localhost:5000/api/notes\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    const data = await res.json();\r\n\r\n    if (data.notes) {\r\n      setNotes(data.notes);\r\n      if (data.upgradeRequired) setUpgradeRequired(true);\r\n    } else {\r\n      console.error(\"Error fetching notes:\", data);\r\n    }\r\n  };\r\n\r\n  const createNote = async () => {\r\n    if (!token || !newTitle) return;\r\n\r\n    const res = await fetch(\"http://localhost:5000/api/notes\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({ title: newTitle, content: newContent }),\r\n    });\r\n\r\n    const data = await res.json();\r\n    if (data.error) {\r\n      alert(data.error);\r\n      if (data.upgradeRequired) setUpgradeRequired(true);\r\n    } else {\r\n      setNotes([data, ...notes]);\r\n      setNewTitle(\"\");\r\n      setNewContent(\"\");\r\n    }\r\n  };\r\n\r\n  const deleteNote = async (id) => {\r\n    if (!token) return;\r\n\r\n    await fetch(`http://localhost:5000/api/notes/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n\r\n    setNotes(notes.filter((n) => n._id !== id));\r\n  };\r\n\r\n  const upgradePlan = async () => {\r\n    if (!token || !user?.tenantSlug) return;\r\n\r\n    const res = await fetch(`http://localhost:5000/api/tenants/${user.tenantSlug}/upgrade`, {\r\n      method: \"POST\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n\r\n    const data = await res.json();\r\n    if (data.success) {\r\n      alert(\"Upgraded to Pro plan! Note limit removed.\");\r\n      setUpgradeRequired(false);\r\n      fetchNotes();\r\n    } else {\r\n      alert(data.error || \"Upgrade failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notes-container\">\r\n      <h1>Notes Dashboard</h1>\r\n      {user?.role === \"ADMIN\" && (\r\n        <div className=\"admin-actions\">\r\n          <button onClick={upgradePlan}>Upgrade Tenant Plan</button>\r\n        </div>\r\n      )}\r\n\r\n      {upgradeRequired && <p className=\"upgrade-warning\">Note limit reached! Upgrade to Pro to add more notes.</p>}\r\n\r\n      <div className=\"create-note\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={newTitle}\r\n          onChange={(e) => setNewTitle(e.target.value)}\r\n        />\r\n        <textarea\r\n          placeholder=\"Content\"\r\n          value={newContent}\r\n          onChange={(e) => setNewContent(e.target.value)}\r\n        />\r\n        <button onClick={createNote}>Add Note</button>\r\n      </div>\r\n\r\n      <div className=\"notes-list\">\r\n        {notes.map((note) => (\r\n          <div key={note._id} className=\"note-card\">\r\n            <h3>{note.title}</h3>\r\n            <p>{note.content}</p>\r\n            <small>Author: {note.author?.email || \"Unknown\"}</small>\r\n            <button onClick={() => deleteNote(note._id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}