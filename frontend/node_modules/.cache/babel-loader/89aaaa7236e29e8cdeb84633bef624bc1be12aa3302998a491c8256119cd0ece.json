{"ast":null,"code":"var _jsxFileName = \"D:\\\\saas notes mern gpt\\\\frontend\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login({\n  onLogin\n}) {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    try {\n      const res = await fetch(\"http://localhost:5000/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        setError(data.message || \"Login failed\");\n        return;\n      }\n\n      // Save token in localStorage\n      localStorage.setItem(\"token\", data.token);\n      localStorage.setItem(\"role\", data.role);\n      localStorage.setItem(\"email\", data.email);\n      if (onLogin) onLogin(); // trigger redirect in App\n    } catch (err) {\n      console.error(err);\n      setError(\"Server error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"/oUdbphBttpIcUsa7P1v1069QkA=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","onLogin","_s","email","setEmail","password","setPassword","error","setError","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","message","localStorage","setItem","token","role","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/saas notes mern gpt/frontend/src/pages/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./login.css\";\r\n\r\nexport default function Login({ onLogin }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/auth/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (!res.ok) {\r\n        setError(data.message || \"Login failed\");\r\n        return;\r\n      }\r\n\r\n      // Save token in localStorage\r\n      localStorage.setItem(\"token\", data.token);\r\n      localStorage.setItem(\"role\", data.role);\r\n      localStorage.setItem(\"email\", data.email);\r\n\r\n      if (onLogin) onLogin(); // trigger redirect in App\r\n\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError(\"Server error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n        {error && <p className=\"error\">{error}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,eAAe,SAASC,KAAKA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEf,KAAK;UAAEE;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,MAAMc,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAE7B,IAAI,CAACR,GAAG,CAACS,EAAE,EAAE;QACXb,QAAQ,CAACW,IAAI,CAACG,OAAO,IAAI,cAAc,CAAC;QACxC;MACF;;MAEA;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,IAAI,CAACM,KAAK,CAAC;MACzCF,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACO,IAAI,CAAC;MACvCH,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,IAAI,CAAChB,KAAK,CAAC;MAEzC,IAAIF,OAAO,EAAEA,OAAO,CAAC,CAAC,CAAC,CAAC;IAE1B,CAAC,CAAC,OAAO0B,GAAG,EAAE;MACZC,OAAO,CAACrB,KAAK,CAACoB,GAAG,CAAC;MAClBnB,QAAQ,CAAC,cAAc,CAAC;IAC1B;EACF,CAAC;EAED,oBACET,OAAA;IAAK8B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9B/B,OAAA;MAAA+B,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdnC,OAAA;MAAMoC,QAAQ,EAAE1B,YAAa;MAAAqB,QAAA,gBAC3B/B,OAAA;QACEqC,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAEnC,KAAM;QACboC,QAAQ,EAAG7B,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE;QAC1CG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFnC,OAAA;QACEqC,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEjC,QAAS;QAChBkC,QAAQ,EAAG7B,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFnC,OAAA;QAAQqC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACnC3B,KAAK,iBAAIR,OAAA;QAAG8B,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEvB;MAAK;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAChC,EAAA,CA3DuBF,KAAK;AAAA0C,EAAA,GAAL1C,KAAK;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}