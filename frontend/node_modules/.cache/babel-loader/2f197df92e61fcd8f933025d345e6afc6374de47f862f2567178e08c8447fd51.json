{"ast":null,"code":"var _jsxFileName = \"D:\\\\saas notes mern gpt\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Notes from \"./pages/Notes\";\nimport AdminDashboard from \"./pages/AdminDashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(!!localStorage.getItem(\"token\"));\n  const role = localStorage.getItem(\"role\");\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: loggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: role === \"admin\" ? \"/admin\" : \"/notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: () => setLoggedIn(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 90\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/notes\",\n        element: loggedIn && role === \"user\" ? /*#__PURE__*/_jsxDEV(Notes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 50\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: loggedIn && role === \"admin\" ? /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 51\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 72\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Jl6MaARYJZIqIzTmg0/7ygZC1XE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Routes","Route","Navigate","Login","Notes","AdminDashboard","jsxDEV","_jsxDEV","App","_s","loggedIn","setLoggedIn","localStorage","getItem","role","children","path","element","to","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["D:/saas notes mern gpt/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport Login from \"./pages/Login\";\r\nimport Notes from \"./pages/Notes\";\r\nimport AdminDashboard from \"./pages/AdminDashboard\";\r\n\r\nexport default function App() {\r\n  const [loggedIn, setLoggedIn] = useState(!!localStorage.getItem(\"token\"));\r\n  const role = localStorage.getItem(\"role\");\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route\r\n          path=\"/login\"\r\n          element={loggedIn ? <Navigate to={role === \"admin\" ? \"/admin\" : \"/notes\"} /> : <Login onLogin={() => setLoggedIn(true)} />}\r\n        />\r\n        <Route\r\n          path=\"/notes\"\r\n          element={loggedIn && role === \"user\" ? <Notes /> : <Navigate to=\"/login\" />}\r\n        />\r\n        <Route\r\n          path=\"/admin\"\r\n          element={loggedIn && role === \"admin\" ? <AdminDashboard /> : <Navigate to=\"/login\" />}\r\n        />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACzE,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,cAAc,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAACc,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACzE,MAAMC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAEzC,oBACEN,OAAA,CAACR,aAAa;IAAAgB,QAAA,eACZR,OAAA,CAACP,MAAM;MAAAe,QAAA,gBACLR,OAAA,CAACN,KAAK;QACJe,IAAI,EAAC,QAAQ;QACbC,OAAO,EAAEP,QAAQ,gBAAGH,OAAA,CAACL,QAAQ;UAACgB,EAAE,EAAEJ,IAAI,KAAK,OAAO,GAAG,QAAQ,GAAG;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGf,OAAA,CAACJ,KAAK;UAACoB,OAAO,EAAEA,CAAA,KAAMZ,WAAW,CAAC,IAAI;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5H,CAAC,eACFf,OAAA,CAACN,KAAK;QACJe,IAAI,EAAC,QAAQ;QACbC,OAAO,EAAEP,QAAQ,IAAII,IAAI,KAAK,MAAM,gBAAGP,OAAA,CAACH,KAAK;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGf,OAAA,CAACL,QAAQ;UAACgB,EAAE,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E,CAAC,eACFf,OAAA,CAACN,KAAK;QACJe,IAAI,EAAC,QAAQ;QACbC,OAAO,EAAEP,QAAQ,IAAII,IAAI,KAAK,OAAO,gBAAGP,OAAA,CAACF,cAAc;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGf,OAAA,CAACL,QAAQ;UAACgB,EAAE,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEpB;AAACb,EAAA,CAtBuBD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}