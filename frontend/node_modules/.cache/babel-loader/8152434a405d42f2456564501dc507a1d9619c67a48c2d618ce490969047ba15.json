{"ast":null,"code":"var _jsxFileName = \"D:\\\\saas notes mern gpt\\\\frontend\\\\src\\\\pages\\\\Notes.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Notes() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const token = localStorage.getItem(\"token\");\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const fetchNotes = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/api/notes\", config);\n      setNotes(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  const addNote = async () => {\n    if (!title) return setMessage(\"Title is required\");\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/notes\", {\n        title,\n        content\n      }, config);\n      setNotes([res.data, ...notes]);\n      setTitle(\"\");\n      setContent(\"\");\n      setMessage(\"\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Error adding note\");\n    }\n  };\n  const deleteNote = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/notes/${id}`, config);\n      setNotes(notes.filter(n => n._id !== id));\n    } catch (err) {\n      setMessage(\"Error deleting note\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Content\",\n      value: content,\n      onChange: e => setContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNote,\n      children: \"Add Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: note.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: note.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteNote(note._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, note._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Notes, \"5HQ7QT/hpwVeRUrLSNgr4uAnB64=\");\n_c = Notes;\nvar _c;\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Notes","_s","notes","setNotes","title","setTitle","content","setContent","message","setMessage","token","localStorage","getItem","config","headers","Authorization","fetchNotes","res","get","data","err","console","log","addNote","post","_err$response","_err$response$data","response","deleteNote","id","delete","filter","n","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","placeholder","value","onChange","e","target","onClick","map","note","_c","$RefreshReg$"],"sources":["D:/saas notes mern gpt/frontend/src/pages/Notes.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Notes() {\r\n  const [notes, setNotes] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  const config = { headers: { Authorization: `Bearer ${token}` } };\r\n\r\n  const fetchNotes = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:5000/api/notes\", config);\r\n      setNotes(res.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  const addNote = async () => {\r\n    if (!title) return setMessage(\"Title is required\");\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/notes\", { title, content }, config);\r\n      setNotes([res.data, ...notes]);\r\n      setTitle(\"\");\r\n      setContent(\"\");\r\n      setMessage(\"\");\r\n    } catch (err) {\r\n      setMessage(err.response?.data?.message || \"Error adding note\");\r\n    }\r\n  };\r\n\r\n  const deleteNote = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/notes/${id}`, config);\r\n      setNotes(notes.filter(n => n._id !== id));\r\n    } catch (err) {\r\n      setMessage(\"Error deleting note\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Notes</h2>\r\n      {message && <p style={{ color: \"red\" }}>{message}</p>}\r\n      <input type=\"text\" placeholder=\"Title\" value={title} onChange={e => setTitle(e.target.value)} />\r\n      <textarea placeholder=\"Content\" value={content} onChange={e => setContent(e.target.value)} />\r\n      <button onClick={addNote}>Add Note</button>\r\n\r\n      {notes.map(note => (\r\n        <div key={note._id} className=\"note-card\">\r\n          <h4>{note.title}</h4>\r\n          <p>{note.content}</p>\r\n          <button onClick={() => deleteNote(note._id)}>Delete</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}