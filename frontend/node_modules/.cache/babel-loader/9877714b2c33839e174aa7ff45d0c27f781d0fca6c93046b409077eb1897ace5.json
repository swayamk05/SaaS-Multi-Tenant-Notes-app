{"ast":null,"code":"var _jsxFileName = \"D:\\\\saas notes mern gpt\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Notes from \"./pages/Notes\";\nimport Navbar from \"./components/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem(\"token\"));\n  const handleLogin = () => setIsLoggedIn(true);\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isLoggedIn: isLoggedIn,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: !isLoggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 53\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 87\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/notes\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Notes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 52\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 64\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Yp/3JnSfDCFjjhBNEl1hucALyOQ=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Routes","Route","Navigate","Login","Notes","Navbar","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","localStorage","getItem","handleLogin","handleLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLogin","to","_c","$RefreshReg$"],"sources":["D:/saas notes mern gpt/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport Login from \"./pages/Login\";\r\nimport Notes from \"./pages/Notes\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nexport default function App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem(\"token\"));\r\n\r\n  const handleLogin = () => setIsLoggedIn(true);\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar isLoggedIn={isLoggedIn} handleLogout={handleLogout} />\r\n      <Routes>\r\n        <Route path=\"/login\" element={!isLoggedIn ? <Login onLogin={handleLogin} /> : <Navigate to=\"/notes\" />} />\r\n        <Route path=\"/notes\" element={isLoggedIn ? <Notes /> : <Navigate to=\"/login\" />} />\r\n        <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAC1D,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAACa,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAE7E,MAAMC,WAAW,GAAGA,CAAA,KAAMH,aAAa,CAAC,IAAI,CAAC;EAC7C,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzBH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;IAChCL,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEJ,OAAA;IAAAU,QAAA,gBACEV,OAAA,CAACF,MAAM;MAACK,UAAU,EAAEA,UAAW;MAACK,YAAY,EAAEA;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9Dd,OAAA,CAACP,MAAM;MAAAiB,QAAA,gBACLV,OAAA,CAACN,KAAK;QAACqB,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAE,CAACb,UAAU,gBAAGH,OAAA,CAACJ,KAAK;UAACqB,OAAO,EAAEV;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGd,OAAA,CAACL,QAAQ;UAACuB,EAAE,EAAC;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1Gd,OAAA,CAACN,KAAK;QAACqB,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEb,UAAU,gBAAGH,OAAA,CAACH,KAAK;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGd,OAAA,CAACL,QAAQ;UAACuB,EAAE,EAAC;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnFd,OAAA,CAACN,KAAK;QAACqB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEhB,OAAA,CAACL,QAAQ;UAACuB,EAAE,EAAC;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACZ,EAAA,CAnBuBD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}