{"ast":null,"code":"var _jsxFileName = \"D:\\\\saas-notes-app\\\\frontend\\\\src\\\\pages\\\\Notes.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notes() {\n  _s();\n  const [notes, setNotes] = useState([]); // ✅ always an array\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const token = localStorage.getItem(\"token\"); // ✅ get saved token\n        const res = await fetch(\"http://localhost:5000/api/notes\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        setNotes(data); // ✅ update state\n      } catch (error) {\n        console.error(\"Error fetching notes:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNotes();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading notes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  if (!notes || notes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No notes found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map((note, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: note.title ? note.title : JSON.stringify(note)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Notes, \"I4K4w9oJpuKUIeK96G/eoa0AU7g=\");\n_c = Notes;\nexport default Notes;\nvar _c;\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Notes","_s","notes","setNotes","loading","setLoading","fetchNotes","token","localStorage","getItem","res","fetch","headers","Authorization","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","note","idx","title","JSON","stringify","_c","$RefreshReg$"],"sources":["D:/saas-notes-app/frontend/src/pages/Notes.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Notes() {\r\n  const [notes, setNotes] = useState([]); // ✅ always an array\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchNotes = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\"); // ✅ get saved token\r\n        const res = await fetch(\"http://localhost:5000/api/notes\", {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        const data = await res.json();\r\n        setNotes(data); // ✅ update state\r\n      } catch (error) {\r\n        console.error(\"Error fetching notes:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p>Loading notes...</p>;\r\n  }\r\n\r\n  if (!notes || notes.length === 0) {\r\n    return <p>No notes found.</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Your Notes</h2>\r\n      <ul>\r\n        {notes.map((note, idx) => (\r\n          <li key={idx}>{note.title ? note.title : JSON.stringify(note)}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notes;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QAC7C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;UACzDC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAE,UAAUN,KAAK;UAChC;QACF,CAAC,CAAC;QAEF,MAAMO,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;QAC7BZ,QAAQ,CAACW,IAAI,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,SAAS;QACRX,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAmB,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAChC;EAEA,IAAI,CAACpB,KAAK,IAAIA,KAAK,CAACqB,MAAM,KAAK,CAAC,EAAE;IAChC,oBAAOxB,OAAA;MAAAmB,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC/B;EAEA,oBACEvB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBvB,OAAA;MAAAmB,QAAA,EACGhB,KAAK,CAACsB,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBACnB3B,OAAA;QAAAmB,QAAA,EAAeO,IAAI,CAACE,KAAK,GAAGF,IAAI,CAACE,KAAK,GAAGC,IAAI,CAACC,SAAS,CAACJ,IAAI;MAAC,GAApDC,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsD,CACnE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACrB,EAAA,CA7CQD,KAAK;AAAA8B,EAAA,GAAL9B,KAAK;AA+Cd,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}